-- File: pwm_module.vhd
-- Generated by MyHDL 0.9.0
-- Date: Fri Apr 22 09:50:20 2016


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_090.all;

entity pwm_module is
    port (
        period: in unsigned(15 downto 0);
        t_on: in unsigned(15 downto 0);
        pwm: out std_logic;
        period_end: out std_logic;
        clk: in std_logic
    );
end entity pwm_module;


architecture MyHDL of pwm_module is





signal count: unsigned(15 downto 0);

begin





PWM_MODULE_LOGIC: process (clk) is
begin
    if rising_edge(clk) then
        if (count = period) then
            count <= to_unsigned(0, 16);
            period_end <= '1';
        else
            count <= (count + 1);
            period_end <= '0';
        end if;
        if (count > t_on) then
            pwm <= '0';
        else
            pwm <= '1';
        end if;
    end if;
end process PWM_MODULE_LOGIC;

end architecture MyHDL;
